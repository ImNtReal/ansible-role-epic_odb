---
- name: Make Iris users
  block:
    - name: Get user info for {{ iris_user['username'] }}
      ansible.builtin.command: |
        /epic/{{ EpicEnvironment['Instance'] | lower }}/bin/cusers --list --parseable --users {{ iris_user['username'] }}
      changed_when: false
      check_mode: false
      register: user_info
      become: true
      become_user: epicadm
    - name: Verify that user exists
      ansible.builtin.assert:
        that:
          "'does not exist on this system' not in user_info['stdout']"
  rescue:
    - name: Create user {{ iris_user['username'] }}
      ansible.builtin.command: |
        /epic/{{ EpicEnvironment['Instance'] | lower }}/bin/cusers --add --users {{ iris_user['username'] }} --roles {{ iris_user['roles'] | join(',') }}
      become: true
      become_user: epicadm
      register: create_user_result
      changed_when: "create_user_result[stdout]"
      check_mode: false
    - name: Get user info for {{ iris_user['username'] }}
      ansible.builtin.command: |
        /epic/{{ EpicEnvironment['Instance'] | lower }}/bin/cusers --list --parseable --users {{ iris_user['username'] }}
      changed_when: false
      check_mode: false
      register: user_info
      become: true
      become_user: epicadm

- name: Get user roles
  ansible.builtin.set_fact:
    user_roles: "{{ user_info['stdout_lines'][-1].split('^')[-1].split(',') }}"

- name: Adjust user roles to match inventory
  ansible.builtin.command: |
    /epic/{{ EpicEnvironment['Instance'] | lower }}/bin/cusers --modify --users {{ iris_user['username'] }} --roles {{ iris_user['roles'] | join(',') }}
  when: user_roles != iris_user['roles']
  become: true
  become_user: epicadm
